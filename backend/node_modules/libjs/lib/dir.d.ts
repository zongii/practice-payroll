/// <reference types="node" />
import { TCallback, TCallbackWithError } from './types';
export declare function mkdir(pathname: string, mode: number): number;
export declare function mkdirAsync(pathname: string, mode: number, callback: TCallback): void;
export declare function mkdirat(dirfd: number, pathname: string, mode: number): number;
export declare function mkdiratAsync(dirfd: number, pathname: string, mode: number, callback: TCallback): void;
export declare function rmdir(pathname: string): number;
export declare function rmdirAsync(pathname: string, callback: TCallback): void;
export declare function getcwd(): string;
export declare function getcwdAsync(callback: TCallbackWithError<number, string>): void;
export declare function getdents64(fd: number, dirp: Buffer): number;
export declare function getdents64Async(fd: number, dirp: Buffer, callback: TCallback): void;
export interface IReaddirEntry {
    ino: [number, number];
    offset: number;
    type: number;
    name: string;
}
export declare function readdir(path: string, encoding?: string): IReaddirEntry[];
export declare function readdirList(path: string, encoding?: string): string[];
export declare function readdirListAsync(path: string, encoding: string, callback: TCallbackWithError<number, string[]>): void;
