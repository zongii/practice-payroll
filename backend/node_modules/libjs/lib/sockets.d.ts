/// <reference types="node" />
import { AF, MSG, SOCK, SHUT, IP, IPV6, SO, Isockaddr_in } from './platform';
import { Struct } from './typebase';
import { TCallback, TAddress } from './types';
export declare function socket(domain: AF, type: SOCK, protocol: number): number;
export declare function socketAsync(domain: AF, type: SOCK, protocol: number, callback: TCallback): void;
export declare function connect(fd: number, sockaddr: Isockaddr_in): number;
export declare function connectAsync(fd: number, sockaddr: Isockaddr_in, callback: TCallback): void;
export declare function bind(fd: number, sockaddr: Isockaddr_in, addr_type: Struct): number;
export declare function bindAsync(fd: number, sockaddr: Isockaddr_in, addr_type: Struct, callback: TCallback): void;
export declare function listen(fd: number, backlog: number): number;
export declare function listenAsync(fd: number, backlog: number, callback: TCallback): void;
export declare function accept(fd: number, buf: Buffer): number;
export declare function acceptAsync(fd: number, buf: Buffer, callback: TCallback): void;
export declare function accept4(fd: number, buf: Buffer, flags: SOCK): number;
export declare function accept4Async(fd: number, buf: Buffer, flags: SOCK, callback: TCallback): void;
export declare function shutdown(fd: number, how: SHUT): number;
export declare function shutdownAsync(fd: number, how: SHUT, callback: TCallback): void;
export declare function send(fd: number, buf: Buffer, flags?: MSG): number;
export declare function sendAsync(fd: number, buf: Buffer, flags: MSG, callback: TCallback): void;
export declare function sendto(fd: number, buf: Buffer, flags?: MSG, addr?: Isockaddr_in, addr_type?: Struct): number;
export declare function sendtoAsync(fd: number, buf: Buffer, flags: MSG, addr: Isockaddr_in, addr_type: Struct, callback: TCallback): void;
export declare function recv(sockfd: number, buf: Buffer, flags?: number): number;
export declare function recvfrom(sockfd: number, buf: TAddress, len: number, flags: number, addr: TAddress, addrlen: TAddress): number;
export declare function setsockopt(sockfd: number, level: number, optname: IP | IPV6 | SO, optval: Buffer): number;
